# : << EOF
## ==================================================================
## PLUGINS
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-urlview'

set -g @plugin 'tmux-plugins/vim-tmux-focus-events'
set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @plugin 'nhdaly/tmux-better-mouse-mode'
# set -g @plugin 'odedlaz/tmux-onedark-theme'

## ==================================================================

## set default TERM
set -g default-command ${SHELL}
set -g default-terminal 'tmux-256color'
set -ga terminal-overrides ",*256col*:Tc"

## undercurl support
set -as terminal-overrides ',*:Smulx=\E[5::%p1dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

## change activation key
unbind C-b
set -g prefix C-a
bind C-a send-prefix

bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from

## change key to split panes
# horizontal
unbind %
bind / split-window -h

# vertical
unbind '"'
bind - split-window -v

## clear both
bind C-l send-keys C-l

## create new session
bind C-c new-session

## find session and navigation
bind C-s command-prompt -p find-session "switch-client -t %%"

## window navigation
unbind n
unbind p
bind -r h previous-window
bind -r l next-window
bind Tab  last-window

## use alt (option) + number to switch window.
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

## swap current pane
bind > swap-pane -D
bind < swap-pane -U

## vim style
set-option -g status-keys vi
setw -g mode-keys vi

## start pane with numbering at 1
set -g base-index 1
setw -g pane-base-index 1

## window name reflects current program
setw -g automatic-rename on

## renumber windows when close pane
set -g renumber-windows on

## redraw status line every 1s
set -g status-interval 1

## set terminal title
set-option -g set-titles on
set-option -g set-titles-string "#H: $PWD [#I:#P]"

##
setw -g monitor-activity on
set -g visual-activity on

## reload configuration
bind r source-file ~/.tmux.conf \; display 'Config reloaded'

## toggle mouse
bind m run "cut -c3- ~/.tmux.conf | sh -s _toggle_mouse"
# bind u run "cut -c3- ~/.tmux.conf | sh -s _urlview #{pane_id}"

## =====================================================================
run-shell '~/.tmux/themes/tmux-sinokai.tmux'


## =====================================================================
# CONFIG PLUGINS
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_fg '#2c2e34'
set -g @prefix_highlight_bg 'brightblue'

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins/'
run '~/.tmux/plugins/tpm/tpm'
## =====================================================================

# EOF
#
# # exit the script if any statement returns a non-true return value
# set -e
#
# unset GREP_OPTIONS
# export LC_NUMERIC=C
#
# if ! printf '' | sed -E 's///' 2>/dev/null; then
#   if printf '' | sed -r 's///' 2>/dev/null; then
#     sed () {
#       n=$#; while [ "$n" -gt 0 ]; do arg=$1; shift; case $arg in -E*) arg=-r${arg#-E};; esac; set -- "$@" "$arg"; n=$(( n - 1 )); done
#       command sed "$@"
#     }
#   fi
# fi
#
# _toggle_mouse() {
#   old=$(tmux show -gv mouse)
#   new=""
#
#   if [ "$old" = "on" ]; then
#     new="off"
#   else
#     new="on"
#   fi
#
#   tmux set -g mouse $new
# }
#
# _urlview() {
#   tmux capture-pane -J -S - -E - -b "urlview-$1" -t "$1"
#   tmux split-window "tmux show-buffer -b urlview-$1 | urlview || true; tmux delete-buffer -b urlview-$1"
# }
#
# "$@"
